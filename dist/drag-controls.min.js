!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.DragControls=t()}(this,function(){"use strict";var t=void 0,u=void 0,v=void 0,E=void 0,p=void 0,h=void 0,f=void 0,y=void 0;return function(){function d(e,t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,d),this.objects=e,this.enabled=!0,this.camera=t,this.domElement=n;var r=this;function a(e){e.preventDefault(),v.setFromCamera(E,r.camera);var t=v.intersectObjects(r.objects);0<t.length&&(f=t[0].object,v.ray.intersectPlane(u,h)&&p.copy(h).sub(f.position),r.domElement.style.cursor="move",r.dispatchEvent({type:"dragstart",object:f}))}function i(e){e.preventDefault();var t=r.domElement.getBoundingClientRect();if(E.x=(e.clientX-t.left)/t.width*2-1,E.y=-(e.clientY-t.top)/t.height*2+1,v.setFromCamera(E,r.camera),f&&r.enabled)return v.ray.intersectPlane(u,h)&&f.position.copy(h.sub(p)),void r.dispatchEvent({type:"drag",object:f});v.setFromCamera(E,r.camera);var n=v.intersectObjects(r.objects);if(0<n.length){var o=n[0].object;u.setFromNormalAndCoplanarPoint(r.camera.getWorldDirection(u.normal),o.position),y!==o&&(r.dispatchEvent({type:"hoveron",object:o}),r.domElement.style.cursor="pointer",y=o)}else null!==y&&(r.dispatchEvent({type:"hoveroff",object:y}),r.domElement.style.cursor="auto",y=null)}function c(e){e.preventDefault(),f&&(r.dispatchEvent({type:"dragend",object:f}),f=null),r.domElement.style.cursor="auto"}function s(e){e.preventDefault(),e=e.changedTouches[0];var t=r.domElement.getBoundingClientRect();E.x=(e.clientX-t.left)/t.width*2-1,E.y=-(e.clientY-t.top)/t.height*2+1,v.setFromCamera(E,r.camera);var n=v.intersectObjects(r.objects);0<n.length&&(f=n[0].object,u.setFromNormalAndCoplanarPoint(r.camera.getWorldDirection(u.normal),f.position),v.ray.intersectPlane(u,h)&&p.copy(h).sub(f.position),r.domElement.style.cursor="move",r.dispatchEvent({type:"dragstart",object:f}))}function l(e){e.preventDefault(),e=e.changedTouches[0];var t=r.domElement.getBoundingClientRect();if(E.x=(e.clientX-t.left)/t.width*2-1,E.y=-(e.clientY-t.top)/t.height*2+1,v.setFromCamera(E,r.camera),f&&r.enabled)return v.ray.intersectPlane(u,h)&&f.position.copy(h.sub(p)),void r.dispatchEvent({type:"drag",object:f})}function m(e){e.preventDefault(),f&&(r.dispatchEvent({type:"dragend",object:f}),f=null),r.domElement.style.cursor="auto"}this.activate=function(){o.domElement?(o.domElement.addEventListener("mousedown",a,!1),o.domElement.addEventListener("mousemove",i,!1),o.domElement.addEventListener("mouseup",c,!1),o.domElement.addEventListener("mouseleave",c,!1),o.domElement.addEventListener("touchstart",s,!1),o.domElement.addEventListener("touchmove",l,!1),o.domElement.addEventListener("touchend",m,!1)):console.log("Cannot activate the drag controls on a null DOM element")},this.deactivate=function(){o.domElement?(o.domElement.removeEventListener("mousedown",a,!1),o.domElement.removeEventListener("mousemove",i,!1),o.domElement.removeEventListener("mouseup",c,!1),o.domElement.removeEventListener("mouseleave",c,!1),o.domElement.removeEventListener("touchstart",s,!1),o.domElement.removeEventListener("touchmove",l,!1),o.domElement.removeEventListener("touchend",m,!1)):console.log("Cannot deactivate the drag controls on a null DOM element")},this.activate()}return d.install=function(e){t=e.THREE,u=new t.Plane,v=new t.Raycaster,E=new t.Vector2,p=new t.Vector3,h=new t.Vector3,y=f=null,d.prototype=Object.create(t.EventDispatcher.prototype)},d}()});
